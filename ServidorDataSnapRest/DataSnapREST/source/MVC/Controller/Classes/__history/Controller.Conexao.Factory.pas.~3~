unit Controller.Conexao.Factory;

interface

uses
  Controller.Conexao.Factory.Interfaces,
  Model.Conexao.Factory.Interfaces,
  Model.Conexao.Factory;

type
  TConexaoFactory = class(TInterfacedObject, iControllerConexaoFactory)
    private
      FConexaoFactory : iConexaoFactory;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iControllerConexaoFactory;

      function ConexaoFactory : iConexaoFactory;
  end;

implementation

{ TConexaoFactory }

constructor TConexaoFactory.Create;
begin
 ///
end;

destructor TConexaoFactory.Destroy;
begin
  inherited;
end;

class function TConexaoFactory.New: iControllerConexaoFactory;
begin
  Result := Self.Create;
end;

function TConexaoFactory.ConexaoFactory: iConexaoFactory;
begin
  if not Assigned() then
     FConexaoFactory := TConexaoFactory;
end;

end.
