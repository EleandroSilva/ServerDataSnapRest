unit Model.Conexao.MySQL;

interface

uses
  Data.DB,
  System.JSON,

  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.Phys.PG,
  FireDAC.VCLUI.Wait,
  FireDAC.Comp.Client,
  FireDAC.Stan.Param,
  FireDAC.DatS,
  FireDAC.DApt.Intf,
  FireDAC.DApt,
  FireDAC.Comp.DataSet,
  System.JSON,

  Data.DB,

  DataSetConverter4D.Helper,
  DataSetConverter4D.Impl,

  Model.Conexao.MySQL.Interfaces;

type
  TConexaoMySQL = class(TInterfacedObject, iConexaoMySQL)
    private
      FConexao            : TFDConnection;
      FQuery              : TFDQuery;
      FDriverPostgreSQL   : TFDPhysPgDriverLink;
      FAsJsonArray        : TJsonArray;
    public
      constructor Create;
      destructor Drestoy; override;
      class function New : iConexaoMySQL;

      function Params(Param: String; Value: Variant): iConexaoMySQL; overload;
      function Params(Param: String)                : Variant;       overload;
      function DataSet(DataSource: TDataSource)     : iConexaoMySQL; overload;
      function DataSet                              : iConexaoMySQL; overload;
      function ExecSQL                              : iConexaoMySQL;
      function Open                                 : iConexaoMySQL;
      function Close                                : iConexaoMySQL;
      function SQL(Value: String)                   : iConexaoMySQL;
      function AsJsonArray(Value : TJsonArray)      : iConexaoMySQL; overload;
      function AsJsonArray                          : TJsonArray;    overload;
  end;

implementation

{ TConexaoMySQL }
constructor TConexaoMySQL.Create;
begin
  FConexao          := TFDConnection.Create(nil);
  FQuery            := TFDQuery.Create(nil);
  FDriverPostgreSQL := TFDPhysPgDriverLink;
  FAsJsonArray      := TJsonArray;
end;

destructor TConexaoMySQL.Drestoy;
begin

  inherited;
end;

class function TConexaoMySQL.New: iConexaoMySQL;
begin
  Result := Self.Create;
end;

function TConexaoMySQL.AsJsonArray(Value: TJsonArray): iConexaoMySQL;
begin

end;

function TConexaoMySQL.AsJsonArray: TJsonArray;
begin

end;

function TConexaoMySQL.Close: iConexaoMySQL;
begin

end;


function TConexaoMySQL.DataSet(DataSource: TDataSource): iConexaoMySQL;
begin

end;

function TConexaoMySQL.DataSet: iConexaoMySQL;
begin

end;

function TConexaoMySQL.ExecSQL: iConexaoMySQL;
begin

end;


function TConexaoMySQL.Open: iConexaoMySQL;
begin

end;

function TConexaoMySQL.Params(Param: String; Value: Variant): iConexaoMySQL;
begin

end;

function TConexaoMySQL.Params(Param: String): Variant;
begin

end;

function TConexaoMySQL.SQL(Value: String): iConexaoMySQL;
begin

end;

end.
